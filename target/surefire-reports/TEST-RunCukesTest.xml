<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="RunCukesTest" time="2.085" tests="752" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="gnome"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/jaume/workspace/alexa-jumpandread/target/test-classes:/home/jaume/workspace/alexa-jumpandread/target/classes:/home/jaume/.m2/repository/com/mashape/unirest/unirest-java/1.4.9/unirest-java-1.4.9.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpcore/4.4.4/httpcore-4.4.4.jar:/home/jaume/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/jaume/.m2/repository/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.1/httpasyncclient-4.1.1.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.4/httpcore-nio-4.4.4.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpmime/4.5.2/httpmime-4.5.2.jar:/home/jaume/.m2/repository/org/json/json/20160212/json-20160212.jar:/home/jaume/.m2/repository/org/jsoup/jsoup/1.8.3/jsoup-1.8.3.jar:/home/jaume/.m2/repository/org/apache/commons/commons-lang3/3.8/commons-lang3-3.8.jar:/home/jaume/.m2/repository/org/apache/commons/commons-text/1.6/commons-text-1.6.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk/2.5.5/ask-sdk-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-core/2.5.5/ask-sdk-core-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-model/1.5.0/ask-sdk-model-1.5.0.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.4/jackson-annotations-2.9.4.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.4/jackson-core-2.9.4.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.4/jackson-databind-2.9.4.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.4/jackson-datatype-jsr310-2.9.4.jar:/home/jaume/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/jaume/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.1/log4j-slf4j-impl-2.11.1.jar:/home/jaume/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar:/home/jaume/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.1/log4j-core-2.11.1.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-lambda-support/2.5.5/ask-sdk-lambda-support-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-servlet-support/2.5.5/ask-sdk-servlet-support-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-dynamodb-persistence-adapter/2.5.5/ask-sdk-dynamodb-persistence-adapter-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-apache-client/2.5.5/ask-sdk-apache-client-2.5.5.jar:/home/jaume/.m2/repository/com/google/apis/google-api-services-customsearch/v1-rev72-1.25.0/google-api-services-customsearch-v1-rev72-1.25.0.jar:/home/jaume/.m2/repository/com/google/api-client/google-api-client/1.25.0/google-api-client-1.25.0.jar:/home/jaume/.m2/repository/com/google/oauth-client/google-oauth-client/1.25.0/google-oauth-client-1.25.0.jar:/home/jaume/.m2/repository/com/google/http-client/google-http-client/1.25.0/google-http-client-1.25.0.jar:/home/jaume/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/jaume/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/jaume/.m2/repository/com/google/http-client/google-http-client-jackson2/1.25.0/google-http-client-jackson2-1.25.0.jar:/home/jaume/.m2/repository/com/google/guava/guava/20.0/guava-20.0.jar:/home/jaume/.m2/repository/info/cukes/cucumber-java/1.2.5/cucumber-java-1.2.5.jar:/home/jaume/.m2/repository/info/cukes/cucumber-core/1.2.5/cucumber-core-1.2.5.jar:/home/jaume/.m2/repository/info/cukes/cucumber-html/0.2.3/cucumber-html-0.2.3.jar:/home/jaume/.m2/repository/info/cukes/cucumber-jvm-deps/1.0.5/cucumber-jvm-deps-1.0.5.jar:/home/jaume/.m2/repository/info/cukes/gherkin/2.12.2/gherkin-2.12.2.jar:/home/jaume/.m2/repository/info/cukes/cucumber-java8/1.2.5/cucumber-java8-1.2.5.jar:/home/jaume/.m2/repository/info/cukes/cucumber-junit/1.2.5/cucumber-junit-1.2.5.jar:/home/jaume/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/jaume/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/jaume/.m2/repository/com/amazonaws/aws-lambda-java-core/1.2.0/aws-lambda-java-core-1.2.0.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-dynamodb/1.11.273/aws-java-sdk-dynamodb-1.11.273.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-s3/1.11.273/aws-java-sdk-s3-1.11.273.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-kms/1.11.273/aws-java-sdk-kms-1.11.273.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-core/1.11.273/aws-java-sdk-core-1.11.273.jar:/home/jaume/.m2/repository/software/amazon/ion/ion-java/1.0.2/ion-java-1.0.2.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.6.7/jackson-dataformat-cbor-2.6.7.jar:/home/jaume/.m2/repository/joda-time/joda-time/2.8.1/joda-time-2.8.1.jar:/home/jaume/.m2/repository/com/amazonaws/jmespath-java/1.11.273/jmespath-java-1.11.273.jar:/home/jaume/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/home/jaume/.m2/repository/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/home/jaume/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/jdk1.8.0_172/jre/lib/amd64"/>
    <property name="sun.java.command" value="/home/jaume/workspace/alexa-jumpandread/target/surefire/surefirebooter2047978105322912821.jar /home/jaume/workspace/alexa-jumpandread/target/surefire 2019-04-09T12-25-24_002-jvmRun1 surefire5530534001260069250tmp surefire_01974646653173295805tmp"/>
    <property name="surefire.test.class.path" value="/home/jaume/workspace/alexa-jumpandread/target/test-classes:/home/jaume/workspace/alexa-jumpandread/target/classes:/home/jaume/.m2/repository/com/mashape/unirest/unirest-java/1.4.9/unirest-java-1.4.9.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpcore/4.4.4/httpcore-4.4.4.jar:/home/jaume/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/jaume/.m2/repository/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.1/httpasyncclient-4.1.1.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.4/httpcore-nio-4.4.4.jar:/home/jaume/.m2/repository/org/apache/httpcomponents/httpmime/4.5.2/httpmime-4.5.2.jar:/home/jaume/.m2/repository/org/json/json/20160212/json-20160212.jar:/home/jaume/.m2/repository/org/jsoup/jsoup/1.8.3/jsoup-1.8.3.jar:/home/jaume/.m2/repository/org/apache/commons/commons-lang3/3.8/commons-lang3-3.8.jar:/home/jaume/.m2/repository/org/apache/commons/commons-text/1.6/commons-text-1.6.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk/2.5.5/ask-sdk-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-core/2.5.5/ask-sdk-core-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-model/1.5.0/ask-sdk-model-1.5.0.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.4/jackson-annotations-2.9.4.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.4/jackson-core-2.9.4.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.4/jackson-databind-2.9.4.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.4/jackson-datatype-jsr310-2.9.4.jar:/home/jaume/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/jaume/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.11.1/log4j-slf4j-impl-2.11.1.jar:/home/jaume/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar:/home/jaume/.m2/repository/org/apache/logging/log4j/log4j-core/2.11.1/log4j-core-2.11.1.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-lambda-support/2.5.5/ask-sdk-lambda-support-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-servlet-support/2.5.5/ask-sdk-servlet-support-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-dynamodb-persistence-adapter/2.5.5/ask-sdk-dynamodb-persistence-adapter-2.5.5.jar:/home/jaume/.m2/repository/com/amazon/alexa/ask-sdk-apache-client/2.5.5/ask-sdk-apache-client-2.5.5.jar:/home/jaume/.m2/repository/com/google/apis/google-api-services-customsearch/v1-rev72-1.25.0/google-api-services-customsearch-v1-rev72-1.25.0.jar:/home/jaume/.m2/repository/com/google/api-client/google-api-client/1.25.0/google-api-client-1.25.0.jar:/home/jaume/.m2/repository/com/google/oauth-client/google-oauth-client/1.25.0/google-oauth-client-1.25.0.jar:/home/jaume/.m2/repository/com/google/http-client/google-http-client/1.25.0/google-http-client-1.25.0.jar:/home/jaume/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/jaume/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/jaume/.m2/repository/com/google/http-client/google-http-client-jackson2/1.25.0/google-http-client-jackson2-1.25.0.jar:/home/jaume/.m2/repository/com/google/guava/guava/20.0/guava-20.0.jar:/home/jaume/.m2/repository/info/cukes/cucumber-java/1.2.5/cucumber-java-1.2.5.jar:/home/jaume/.m2/repository/info/cukes/cucumber-core/1.2.5/cucumber-core-1.2.5.jar:/home/jaume/.m2/repository/info/cukes/cucumber-html/0.2.3/cucumber-html-0.2.3.jar:/home/jaume/.m2/repository/info/cukes/cucumber-jvm-deps/1.0.5/cucumber-jvm-deps-1.0.5.jar:/home/jaume/.m2/repository/info/cukes/gherkin/2.12.2/gherkin-2.12.2.jar:/home/jaume/.m2/repository/info/cukes/cucumber-java8/1.2.5/cucumber-java8-1.2.5.jar:/home/jaume/.m2/repository/info/cukes/cucumber-junit/1.2.5/cucumber-junit-1.2.5.jar:/home/jaume/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/jaume/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/jaume/.m2/repository/com/amazonaws/aws-lambda-java-core/1.2.0/aws-lambda-java-core-1.2.0.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-dynamodb/1.11.273/aws-java-sdk-dynamodb-1.11.273.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-s3/1.11.273/aws-java-sdk-s3-1.11.273.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-kms/1.11.273/aws-java-sdk-kms-1.11.273.jar:/home/jaume/.m2/repository/com/amazonaws/aws-java-sdk-core/1.11.273/aws-java-sdk-core-1.11.273.jar:/home/jaume/.m2/repository/software/amazon/ion/ion-java/1.0.2/ion-java-1.0.2.jar:/home/jaume/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.6.7/jackson-dataformat-cbor-2.6.7.jar:/home/jaume/.m2/repository/joda-time/joda-time/2.8.1/joda-time-2.8.1.jar:/home/jaume/.m2/repository/com/amazonaws/jmespath-java/1.11.273/jmespath-java-1.11.273.jar:/home/jaume/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/home/jaume/.m2/repository/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/home/jaume/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/jaume"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/lib/jvm/jdk1.8.0_172/jre"/>
    <property name="basedir" value="/home/jaume/workspace/alexa-jumpandread"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/home/jaume/workspace/alexa-jumpandread/target/surefire/surefirebooter2047978105322912821.jar"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/jdk1.8.0_172/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_172/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_172/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_172/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_172/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_172/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_172/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_172/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_172-b11"/>
    <property name="user.name" value="jaume"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="4.19.0-kali3-amd64"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/jdk1.8.0_172/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/home/jaume/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_172"/>
    <property name="user.dir" value="/home/jaume/workspace/alexa-jumpandread"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="idea.version2019.1" value="true"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.172-b11"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/jdk1.8.0_172/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="Given A mock candidate repository for listing" classname="Scenario: Successfully getting the last candidates list" time="0.001"/>
  <testcase name="And The mock candidate repository contains candidates for user as &quot;user123456789&quot;, session as &quot;session123456789&quot; for search id as &quot;mysearchid&quot; at &quot;10&quot;" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="And The mock candidate repository contains candidates for user as &quot;userOther&quot;, session as &quot;sessionOther&quot; for search id as &quot;othersearchid&quot; at &quot;10&quot;" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="And A user state repository for listing" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="And A current state for listing with user Id as &quot;user123456789&quot;, session Id as &quot;session123456789&quot;, search Id as &quot;mysearchid&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="And A command for getting list by search ID" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="And An Alexa Presenter service for listing" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="And A getting search if list use case" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="When I invoke getting list use case" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="Then Getting list result as in file &quot;expected_getting_list.txt&quot;" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="Scenario: Successfully getting the last candidates list" classname="Scenario: Successfully getting the last candidates list" time="0"/>
  <testcase name="Given A mock candidate repository for listing" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="And The mock candidate repository contains candidates for user as &quot;user123456789&quot;, session as &quot;session123456789&quot; for search id as &quot;mysearchid&quot; at &quot;10&quot;" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="And The mock candidate repository contains candidates for user as &quot;userOther&quot;, session as &quot;sessionOther&quot; for search id as &quot;othersearchid&quot; at &quot;10&quot;" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="And A user state repository for listing" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0.001"/>
  <testcase name="And A current state for listing with user Id as &quot;user123456789&quot;, session Id as &quot;session123456789&quot;, no search Id" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="And A command for getting list by search ID" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="And An Alexa Presenter service for listing" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0.001"/>
  <testcase name="And A getting search if list use case" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="When I invoke getting list use case" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="Then Getting list result as in file &quot;expected_getting_empty_list.txt&quot;" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" classname="Scenario: Trying to get the last candidates list for a state with no search Id gets the empty list warning" time="0"/>
  <testcase name="Given A mock candidate repository for listing" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="And A user state repository for listing" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="And A current state for listing with user Id as &quot;user123456789&quot;, session Id as &quot;session123456789&quot;, search Id as &quot;mysearchid&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0.001"/>
  <testcase name="And A command for getting list by search ID" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="And An Alexa Presenter service for listing" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="And A getting search if list use case" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="When I invoke getting list use case" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="Then Getting list result as in file &quot;expected_getting_empty_list.txt&quot;" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" classname="Scenario: Trying to get the last candidates list for a state with search Id but no candidates gets the empty list warning" time="0"/>
  <testcase name="Given A mock text content provider for candidate listing" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="And A margin edges calculator service for candidate listing" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="And A mock candidate repository for listing" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="And The mock candidate repository contains candidates for user as &quot;user123456789&quot;, session as &quot;session123456789&quot; for search id as &quot;mysearchid&quot; at &quot;10&quot;" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="And A candidate factory for candidate listing" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="And A recorded in repository sample candidate of user as &quot;user123456789&quot;, session as &quot;session123456789&quot;, from search id as &quot;mysearchid&quot;, url as &quot;https://myurl.com&quot; with children as follows" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="And An adding children to search candidates command" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="When I execute the adding children command for the given sample candidate" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="Then The mock candidate repository count is as &quot;13&quot;" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="And The listing command result is as &quot;12. Second candidate title.{{ . }}13. First candidate title.{{ . }}&quot;" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" classname="Scenario: Adding candidate children items to a search id candidates collection when they are not in yet" time="0"/>
  <testcase name="Given A mock text content provider for candidate listing" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And A margin edges calculator service for candidate listing" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And A mock candidate repository for listing" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And The mock candidate repository contains candidates for user as &quot;user123456789&quot;, session as &quot;session123456789&quot; for search id as &quot;mysearchid&quot; at &quot;10&quot;" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And A candidate factory for candidate listing" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And A recorded in repository sample candidate of user as &quot;user123456789&quot;, session as &quot;session123456789&quot;, from search id as &quot;mysearchid&quot;, url as &quot;http://first.candidate.com&quot; with no children" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And A recorded in repository sample candidate of user as &quot;user123456789&quot;, session as &quot;session123456789&quot;, from search id as &quot;mysearchid&quot;, url as &quot;https://myurl.com&quot; with children as follows" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And An adding children to search candidates command" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="When I execute the adding children command for the given sample candidate" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="Then The mock candidate repository count is as &quot;14&quot;" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="And The listing command result is as &quot;13. Second candidate title.{{ . }}14. Third candidate title.{{ . }}&quot;" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" classname="Scenario: Adding candidate children items to a search id candidates collection when some of them are already in" time="0"/>
  <testcase name="Scenario: " classname="Scenario: " time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0.001"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0.001"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0.005"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0.001"/>
  <testcase name="And A newly created use case for current candidate reading" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="When I invoke current candidate use case for intent name as &quot;ReadCandidate&quot;, candidate index as &quot;1&quot;, paragraphs group as &quot;10&quot;" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0.001"/>
  <testcase name="And The speech contained in result is as in file &quot;expected_paragraph_index_0_sample_7.txt&quot;" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="And The current state candidate index is as &quot;1&quot;" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" classname="Scenario: Read command, read the first paragraphs for the given candidate index even when paragraphs index is not the candidate starting point" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0.001"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A configuration value for default jumping factor as &quot;1&quot;" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0.001"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And A newly created use case for pause candidate reading" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="When I invoke pause candidate use case for intent name as &quot;Pause&quot;, paragraphs group as &quot;2&quot;" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And The current state candidate index is as &quot;1&quot;" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And The current state candidate paragraph position is as &quot;4&quot;" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="And The speech contained in result is as &quot;warning.after.pause&quot;" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" classname="Scenario: Pause and Continue command, pause when reading and point paragraph index behind current reading" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0.001"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0.003"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And A newly created use case for current candidate reading" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="When I invoke current candidate use case for intent name as &quot;ReadCandidate&quot;, candidate index as &quot;1&quot;, paragraphs group as &quot;10&quot;" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And The speech contained in result is as in file &quot;expected_paragraph_index_0_sample_7_with_no_paragraphs_prefix.txt&quot;" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="And The current state candidate index is as &quot;2&quot;" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" classname="Scenario: Read command, try reading the first paragraphs for an empty candidate goes to read first paragraphs of the next one" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And A newly created use case for reading next" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="When I invoke next candidate use case for intent name as &quot;Continue&quot;, paragraphs group as &quot;3&quot;" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="And The speech contained in result is as in file &quot;expected_paragraph_index_5_sample_7.txt&quot;" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0.001"/>
  <testcase name="And The current state candidate index is as &quot;1&quot;" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="Scenario: Next command, read next paragraphs when current candidate has them" classname="Scenario: Next command, read next paragraphs when current candidate has them" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0.001"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And A newly created use case for repeat reading" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="When I invoke repeat reading use case for intent name as &quot;Repeat&quot;, paragraphs group as &quot;2&quot;" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0.001"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And The speech contained in result is as in file &quot;expected_paragraph_index_2_to_4_sample_7.txt&quot;" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="And The current state candidate index is as &quot;1&quot;" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="Scenario: Repeat command, repeat reading last read paragraphs" classname="Scenario: Repeat command, repeat reading last read paragraphs" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0.001"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And A newly created use case for current candidate reading" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="When I invoke current candidate use case for intent name as &quot;ReadCandidate&quot;, candidate index as &quot;3&quot;, paragraphs group as &quot;10&quot;" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And The speech contained in result is as &quot;warning.no.candidate.for.this.index.(index(3),start(1),end(2))&quot;" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="And The current state candidate index is as &quot;1&quot;" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="Scenario: Trying to read a candidate with a number out of range asks user to find again" classname="Scenario: Trying to read a candidate with a number out of range asks user to find again" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And A new state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;99999999-1234-4ea6-bfca-347ca7612345&quot;" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0.001"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0.001"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0.001"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And A newly created use case for current candidate reading" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="When I invoke current candidate use case for intent name as &quot;ReadCandidate&quot;, candidate index as &quot;3&quot;, paragraphs group as &quot;10&quot;" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="And The speech contained in result is as &quot;warning.no.search.in.this.session.yet&quot;" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" classname="Scenario: Trying to read a candidate index in a new session having this user deprecated search candidates from other session asks user to search for something" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.001"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.001"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.002"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.001"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.001"/>
  <testcase name="And A newly created use case for reading next" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.001"/>
  <testcase name="When I invoke next candidate use case for intent name as &quot;Continue&quot;, paragraphs group as &quot;10&quot;" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And The speech contained in result is as in file &quot;expected_paragraph_index_sample_7_following.txt&quot;" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0"/>
  <testcase name="And The current state candidate index is as &quot;3&quot;" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.001"/>
  <testcase name="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" classname="Scenario: Trying to read next paragraphs when candidate has no more paragraphs notices user and goes to next candidate and reads first paragraphs group" time="0.001"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0.005"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0.004"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0.001"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0.007"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A configuration value for default jumping factor as &quot;1&quot;" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0.001"/>
  <testcase name="And A forward created use case for reading as times as default jumping factor after next" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="When I invoke forward candidate use case for intent name as &quot;Forward&quot;, paragraphs group as &quot;2&quot;" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0.001"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And The speech contained in result is as in file &quot;expected_paragraph_index_5_sample_7.txt&quot;" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And The current state candidate index is as &quot;1&quot;" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" classname="Scenario: Forward command, jump forwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="Given A web search candidate parser" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0.001"/>
  <testcase name="And An address document getter with forced and queued contents as in files as follows" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A mock text content provider for retrieval" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A user state repository for parsing" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A current state with user Id as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session Id as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot;, search Id as &quot;87654321-7654-4ea6-bfca-747ca111111&quot;, candidateIndex as &quot;1&quot;" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0.001"/>
  <testcase name="And A searching result candidate list as follows" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A multiple candidate repository for jumping" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A candidate factory for parsing" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A Mock Presenter service" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A configuration value for default candidates factor as &quot;1&quot;" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A configuration value for default jumping factor as &quot;1&quot;" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And An adding children to search candidates command for reading only" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A Use Case Factory for reading only" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And A backward created use case for reading as times as default jumping factor after last" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="When I invoke backward candidate use case for intent name as &quot;Backward&quot;, paragraphs group as &quot;2&quot;" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="Then The result after invocation is not null" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And The speech contained in result is as in file &quot;expected_paragraph_index_3_to_5_sample_7.txt&quot;" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0"/>
  <testcase name="And The current state candidate index is as &quot;1&quot;" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0.001"/>
  <testcase name="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" classname="Scenario: Backward command, jump backwards as value of jumping factor and read paragraphs when current candidate has them" time="0.002"/>
  <testcase name="Given A total width as &quot;217&quot;" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0"/>
  <testcase name="And A part range width as &quot;50&quot;" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;40&quot;" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0"/>
  <testcase name="And A moving margin width as &quot;20&quot;" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0"/>
  <testcase name="When I move the current position to &quot;90&quot;" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;80&quot; because &quot;moved after margin&quot;" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0"/>
  <testcase name="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" classname="| 217 | 50 | 40 | 20 | 90 | 80 | moved after margin |" time="0.001"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0"/>
  <testcase name="And A part range width as &quot;50&quot;" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;0&quot;" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0"/>
  <testcase name="And A moving margin width as &quot;20&quot;" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0"/>
  <testcase name="When I move the current position to &quot;55&quot;" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;45&quot; because &quot;moved after margin&quot;" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0"/>
  <testcase name="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" classname="| 1000 | 50 | 0 | 20 | 55 | 45 | moved after margin |" time="0.001"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0.001"/>
  <testcase name="And A part range width as &quot;50&quot;" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;70&quot;" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0.001"/>
  <testcase name="And A moving margin width as &quot;20&quot;" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0"/>
  <testcase name="When I move the current position to &quot;65&quot;" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;25&quot; because &quot;moved before margin&quot;" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0"/>
  <testcase name="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" classname="| 1000 | 50 | 70 | 20 | 65 | 25 | moved before margin |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;0&quot;" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="When I move the current position to &quot;289&quot;" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;214&quot; because &quot;moved after margin&quot;" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" classname="| 1000 | 300 | 0 | 150 | 289 | 214 | moved after margin |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;700&quot;" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="When I move the current position to &quot;720&quot;" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;495&quot; because &quot;moved before margin&quot;" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" classname="| 1000 | 300 | 700 | 150 | 720 | 495 | moved before margin |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;100&quot;" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0.001"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0"/>
  <testcase name="When I move the current position to &quot;5&quot;" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;0&quot; because &quot;moved between 0 and half of margin&quot;" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0"/>
  <testcase name="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" classname="| 1000 | 300 | 100 | 150 | 5 | 0 | moved between 0 and half of margin |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;100&quot;" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="When I move the current position to &quot;990&quot;" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;699&quot; because &quot;moved between total and half of margin&quot;" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" classname="| 1000 | 300 | 100 | 150 | 990 | 699 | moved between total and half of margin |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;180&quot;" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="When I move the current position to &quot;256&quot;" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;[null]&quot; because &quot;do not move it inside negative margin&quot;" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" classname="| 1000 | 300 | 180 | 150 | 256 | [null] | do not move it inside negative margin |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0"/>
  <testcase name="And The part range starts at index &quot;180&quot;" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0.001"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0"/>
  <testcase name="When I move the current position to &quot;404&quot;" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0"/>
  <testcase name="Then The part range has to start at &quot;[null]&quot; because &quot;do not move it inside positive margin&quot;" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0"/>
  <testcase name="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" classname="| 1000 | 300 | 180 | 150 | 404 | [null] | do not move it inside positive margin |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0"/>
  <testcase name="And The part range starts at index &quot;500&quot;" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0"/>
  <testcase name="When I move the current position to &quot;-110&quot;" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0"/>
  <testcase name="Then The part range has to start at &quot;0&quot; because &quot;move to 0 for impossible negative numbers&quot;" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0"/>
  <testcase name="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" classname="| 1000 | 300 | 500 | 150 | -110 | 0 | move to 0 for impossible negative numbers |" time="0.001"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0"/>
  <testcase name="And A part range width as &quot;300&quot;" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0"/>
  <testcase name="And The part range starts at index &quot;500&quot;" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0"/>
  <testcase name="And A moving margin width as &quot;150&quot;" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0.001"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0"/>
  <testcase name="When I move the current position to &quot;2356&quot;" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0"/>
  <testcase name="Then The part range has to start at &quot;699&quot; because &quot;move to maximum for impossible exceeded numbers&quot;" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0"/>
  <testcase name="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" classname="| 1000 | 300 | 500 | 150 | 2356 | 699 | move to maximum for impossible exceeded numbers |" time="0.001"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0.001"/>
  <testcase name="And A part range width as &quot;100&quot;" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0"/>
  <testcase name="And The part range starts at index &quot;0&quot;" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0"/>
  <testcase name="And A moving margin width as &quot;25&quot;" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0"/>
  <testcase name="When I move the current position to &quot;911&quot;" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0"/>
  <testcase name="Then The part range has to start at &quot;899&quot; because &quot;moved from beginning to end of total&quot;" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0"/>
  <testcase name="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" classname="| 1000 | 100 | 0 | 25 | 911 | 899 | moved from beginning to end of total |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0"/>
  <testcase name="And A part range width as &quot;100&quot;" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0"/>
  <testcase name="And The part range starts at index &quot;950&quot;" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0"/>
  <testcase name="And A moving margin width as &quot;25&quot;" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0"/>
  <testcase name="When I move the current position to &quot;25&quot;" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0"/>
  <testcase name="Then The part range has to start at &quot;0&quot; because &quot;moved from end to beginning of total&quot;" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0"/>
  <testcase name="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" classname="| 1000 | 100 | 950 | 25 | 25 | 0 | moved from end to beginning of total |" time="0.001"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0"/>
  <testcase name="And A part range width as &quot;100&quot;" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0"/>
  <testcase name="And The part range starts at index &quot;950&quot;" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0"/>
  <testcase name="And A moving margin width as &quot;25&quot;" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0.001"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0"/>
  <testcase name="When I move the current position to &quot;24&quot;" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0"/>
  <testcase name="Then The part range has to start at &quot;0&quot; because &quot;moved from end to just before beginning of total&quot;" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0"/>
  <testcase name="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" classname="| 1000 | 100 | 950 | 25 | 24 | 0 | moved from end to just before beginning of total |" time="0.001"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="And A part range width as &quot;100&quot;" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="And The part range starts at index &quot;0&quot;" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="And A moving margin width as &quot;25&quot;" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="When I move the current position to &quot;912&quot;" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="Then The part range has to start at &quot;899&quot; because &quot;moved from beginning to just after end of total&quot;" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" classname="| 1000 | 100 | 0 | 25 | 912 | 899 | moved from beginning to just after end of total |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0.001"/>
  <testcase name="And A part range width as &quot;100&quot;" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0"/>
  <testcase name="And The part range starts at index &quot;0&quot;" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0"/>
  <testcase name="And A moving margin width as &quot;25&quot;" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0"/>
  <testcase name="When I move the current position to &quot;910&quot;" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0"/>
  <testcase name="Then The part range has to start at &quot;898&quot; because &quot;moved from beginning to almost end of total&quot;" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0"/>
  <testcase name="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" classname="| 1000 | 100 | 0 | 25 | 910 | 898 | moved from beginning to almost end of total |" time="0"/>
  <testcase name="Given A total width as &quot;1000&quot;" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="And A part range width as &quot;100&quot;" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="And The part range starts at index &quot;999&quot;" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="And A moving margin width as &quot;25&quot;" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="And An edges calculator service" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="When I move the current position to &quot;89&quot;" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="Then The part range has to start at &quot;1&quot; because &quot;moved from end to almost beginning of total&quot;" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" classname="| 1000 | 100 | 999 | 25 | 89 | 1 | moved from end to almost beginning of total |" time="0"/>
  <testcase name="Given A medium article content as in file &quot;medium/mediumFreeArticle.json&quot;" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="And A local content getter for medium parser test" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="And A medium parser service implemented from TextContentParser with the regex pattern as &quot;\]\)\}while\(1\);&lt;/x&gt;(\{.+\})&quot;, URI root as &quot;http://www.medium.com/p&quot;" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="When I parse the medium file content" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="Then The list of medium parsing results length is as &quot;16&quot;" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;0&quot; has content as &quot;Are you looking to buy Outer Lid Pressure Cooker Online?&quot;, has label as &quot;h2&quot;" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;6&quot; has content as &quot;The outer lid pressure cookers come with the induction base. This induction base offers even heat distribution for cooking your food. The precision weight valve of these pressure cookers works as the initial level of the feature of security. It saves your important time and simplifies the entire process of cooking.&quot;, has label as &quot;p&quot;" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;14&quot; has content as &quot;They are also famous across the world for their inner lid pressure cookers. Products made by this company are going through a stringent quality check. They are safe for regular use and available at an attractive price. This company continuously wins the heart of its customers.&quot;, has label as &quot;p&quot;" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;15&quot; has content as &quot;Since its inception, Mr. Cook is a leading cookware and cooker manufacturing company in India. Its outer lid pressure cookers are available in the market with attractive designs.&quot;, has label as &quot;p&quot;" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="Scenario: Successfully parsing a normal free article" classname="Scenario: Successfully parsing a normal free article" time="0"/>
  <testcase name="Given A medium article content as in file &quot;medium/mediumAuthorArticleList.json&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="And A local content getter for medium parser test" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="And A medium parser service implemented from TextContentParser with the regex pattern as &quot;\]\)\}while\(1\);&lt;/x&gt;(\{.+\})&quot;, URI root as &quot;http://www.medium.com/p&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="When I parse the medium file content" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="Then The list of medium parsing results length is as &quot;3&quot;" classname="Scenario: Successfully parsing an author article list" time="0.001"/>
  <testcase name="And The medium parsed item indexed as &quot;0&quot; has content as &quot;Are you looking to buy Outer Lid Pressure Cooker Online?&quot;, has label as &quot;X_CANDIDATE&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;0&quot; has &quot;src&quot; as &quot;http://www.medium.com/p/are-you-looking-to-buy-outer-lid-pressure-cooker-online-fd107be8a9b0&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;1&quot; has content as &quot;Expert?s guide for buying the best inner lid pressure cooker online!&quot;, has label as &quot;X_CANDIDATE&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;1&quot; has &quot;src&quot; as &quot;http://www.medium.com/p/experts-guide-for-buying-the-best-inner-lid-pressure-cooker-online-be507f80613c&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;2&quot; has content as &quot;Buying 1 Litre Pressure Cooker Online Becomes Easier as India?s Best Brand Provides Online Option!&quot;, has label as &quot;X_CANDIDATE&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;2&quot; has &quot;src&quot; as &quot;http://www.medium.com/p/buying-1-litre-pressure-cooker-online-becomes-easier-as-indias-best-brand-provides-online-option-1b0256ed8631&quot;" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="Scenario: Successfully parsing an author article list" classname="Scenario: Successfully parsing an author article list" time="0"/>
  <testcase name="Given A medium article content as in file &quot;medium/mediumTagArticleList.json&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="And A local content getter for medium parser test" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="And A medium parser service implemented from TextContentParser with the regex pattern as &quot;\]\)\}while\(1\);&lt;/x&gt;(\{.+\})&quot;, URI root as &quot;http://www.medium.com/p&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="When I parse the medium file content" classname="Scenario: Successfully parsing a tag article list" time="0.001"/>
  <testcase name="Then The list of medium parsing results length is as &quot;10&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;0&quot; has content as &quot;A #100DaysOfCode Timeboxed Front-End Development Curriculum&quot;, has label as &quot;X_CANDIDATE&quot;" classname="Scenario: Successfully parsing a tag article list" time="0.001"/>
  <testcase name="And The medium parsed item indexed as &quot;0&quot; has &quot;src&quot; as &quot;http://www.medium.com/p/a-100daysofcode-timeboxed-front-end-development-curriculum-cb4b6c2081c2&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;5&quot; has content as &quot;????? ?????????? ???????? ? CSS!&quot;, has label as &quot;X_CANDIDATE&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;5&quot; has &quot;src&quot; as &quot;http://www.medium.com/p/logical-css-props-c5046c563640&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;9&quot; has content as &quot;Build A Real World Beautiful Web APP with Angular 7 ? A to Z Ultimate Guide (2019) ? PART I&quot;, has label as &quot;X_CANDIDATE&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="And The medium parsed item indexed as &quot;9&quot; has &quot;src&quot; as &quot;http://www.medium.com/p/build-a-real-world-beautiful-web-app-with-angular-6-a-to-z-ultimate-guide-2018-part-i-e121dd1d55e&quot;" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="Scenario: Successfully parsing a tag article list" classname="Scenario: Successfully parsing a tag article list" time="0"/>
  <testcase name="Given A medium article content as in file &quot;medium/mediumMemberOnlyArticle.json&quot;" classname="Scenario: Throw a no paragraphs exception on parsing a member only article" time="0"/>
  <testcase name="And A local content getter for medium parser test" classname="Scenario: Throw a no paragraphs exception on parsing a member only article" time="0"/>
  <testcase name="And A medium parser service implemented from TextContentParser with the regex pattern as &quot;\]\)\}while\(1\);&lt;/x&gt;(\{.+\})&quot;, URI root as &quot;http://www.medium.com/p&quot;" classname="Scenario: Throw a no paragraphs exception on parsing a member only article" time="0"/>
  <testcase name="When I parse the medium file content" classname="Scenario: Throw a no paragraphs exception on parsing a member only article" time="0"/>
  <testcase name="Then The parser threw an exception as &quot;com.westial.alexa.jumpandread.application.exception.IteratingNoParagraphsException&quot;" classname="Scenario: Throw a no paragraphs exception on parsing a member only article" time="0"/>
  <testcase name="Scenario: Throw a no paragraphs exception on parsing a member only article" classname="Scenario: Throw a no paragraphs exception on parsing a member only article" time="0.001"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And I get content from &quot;https://www.gutenberg.jumpandread.com/4/f/index.html&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="Then The returned content is as &quot;https://www.gutenberg.jumpandread.com/4/f/index.html&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | https://www.gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0.001"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And I get content from &quot;https://www.medium.com/4/f/index.html&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="Then The returned content is as &quot;https://www.medium.com/4/f/index.html?format=json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html | https://www.medium.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="And I get content from &quot;https://gutenberg.jumpandread.com/4/f/index.html&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="Then The returned content is as &quot;https://gutenberg.jumpandread.com/4/f/index.html&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | https://gutenberg.jumpandread.com/4/f/index.html |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="And I get content from &quot;http://any.web.com/bla/&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="Then The returned content is as &quot;http://any.web.com/bla/&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" classname="| parsers_by_pattern_medium_ok_sample.json | http://any.web.com/bla/ | http://any.web.com/bla/ |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0.001"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0.001"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And I get content from &quot;https://medium.com/4/f/index.html?var=value&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="Then The returned content is as &quot;https://medium.com/4/f/index.html?var=value&amp;format=json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/4/f/index.html?var=value | https://medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0.001"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="And I get content from &quot;https://medium.com/@pedrito/f/?var=value&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="Then The returned content is as &quot;https://medium.com/@pedrito/f/?var=value&amp;format=json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" classname="| parsers_by_pattern_medium_ok_sample.json | https://medium.com/@pedrito/f/?var=value | https://medium.com/@pedrito/f/?var=value&amp;format=json |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="And I get content from &quot;https://gutenbergnoes.com/4/f/index.html?format=json&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="Then The returned content is as &quot;https://gutenbergnoes.com/4/f/index.html?format=json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" classname="| parsers_by_pattern_medium_ok_sample.json | https://gutenbergnoes.com/4/f/index.html?format=json | https://gutenbergnoes.com/4/f/index.html?format=json |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_medium_ok_sample.json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And An url returning mock content getter a default" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And A default address modifier" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And A content getter factory" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="When I create a by pattern content getter according to configuration" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="And I get content from &quot;https://www.medium.com/4/f/index.html?var=value&amp;&quot; by content getter" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="Then The returned content is as &quot;https://www.medium.com/4/f/index.html?var=value&amp;format=json&quot;" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" classname="| parsers_by_pattern_medium_ok_sample.json | https://www.medium.com/4/f/index.html?var=value&amp; | https://www.medium.com/4/f/index.html?var=value&amp;format=json |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://www.gutenberg.jumpandread.com/4/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;WebNarrativeTextContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" classname="| parsers_by_pattern_sample.json | https://www.gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0.001"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://gutenberg.jumpandread.com/4/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;WebNarrativeTextContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" classname="| parsers_by_pattern_sample.json | https://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;http://gutenberg.jumpandread.com/4/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;WebNarrativeTextContentParser&quot;" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" classname="| parsers_by_pattern_sample.json | http://gutenberg.jumpandread.com/4/f/index.html | WebNarrativeTextContentParser |" time="0.001"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://www.westial.com/4/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;MockContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" classname="| parsers_by_pattern_sample.json | https://www.westial.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://gutenbergnoes.com/4/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;MockContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" classname="| parsers_by_pattern_sample.json | https://gutenbergnoes.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://noesgutenberg.com/4/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;MockContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" classname="| parsers_by_pattern_sample.json | https://noesgutenberg.com/4/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0.001"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://www.mediumnoes.com/@ertererte/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;MockContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" classname="| parsers_by_pattern_sample.json | https://www.mediumnoes.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://www.noesmedium.com/@ertererte/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;MockContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" classname="| parsers_by_pattern_sample.json | https://www.noesmedium.com/@ertererte/f/index.html | MockContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://www.medium.com/noesmediumparsejable&quot;" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;MediumTextContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" classname="| parsers_by_pattern_sample.json | https://www.medium.com/noesmediumparsejable | MediumTextContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://www.medium.com/@ertererte/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;WebSearchTextContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" classname="| parsers_by_pattern_sample.json | https://www.medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And I configure the by pattern parser for &quot;https://medium.com/@ertererte/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;WebSearchTextContentParser&quot;" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" classname="| parsers_by_pattern_sample.json | https://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="Given An environment configuration service" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A mock web search parser as default" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="When I create a by pattern parser according to configuration" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0.001"/>
  <testcase name="And I configure the by pattern parser for &quot;http://medium.com/@ertererte/f/index.html&quot;" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="Then The configured parser into by pattern parser is an instance of &quot;WebSearchTextContentParser&quot;" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" classname="| parsers_by_pattern_sample.json | http://medium.com/@ertererte/f/index.html | WebSearchTextContentParser |" time="0"/>
  <testcase name="Given A configuration service created from an environment as in file &quot;environment_bypattern_es.json&quot;" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And A mock text content parser" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And A mock text content provider" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And A candidate repository" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And A candidates search service with &quot;3&quot; forced results" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And A mock candidates search factory for the candidates search service above" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And A fail-safe candidates search factory with &quot;4&quot; instances of first search factory" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="When I create the fail-safe Candidates search service" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="And I ask to find candidates to search service for user with ID as &quot;userid1234-1234-1234&quot;, session ID as &quot;sessionid1234-1234-1234&quot;, search ID as &quot;searchid1234-1234-1234&quot;, terms as &quot;word1 word2 word3&quot;" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="Then The service returned a list with &quot;3&quot; candidates" classname="Scenario: Search works at first search engine over fail safe engine" time="0"/>
  <testcase name="Scenario: Search works at first search engine over fail safe engine" classname="Scenario: Search works at first search engine over fail safe engine" time="0.001"/>
  <testcase name="Given A configuration service created from an environment as in file &quot;environment_bypattern_es.json&quot;" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A mock text content parser" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A mock text content provider" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A candidate repository" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A candidates search service throwing an exception as &quot;SearchException&quot;" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A mock candidates search factory for the candidates search service above" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A candidates search service with &quot;3&quot; forced results" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A second mock candidates search factory for the candidates search service" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And A fail-safe candidates search factory with &quot;2&quot; instances of first search factory and with &quot;2&quot; instances of second one" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="When I create the fail-safe Candidates search service" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="And I ask to find candidates to search service for user with ID as &quot;userid1234-1234-1234&quot;, session ID as &quot;sessionid1234-1234-1234&quot;, search ID as &quot;searchid1234-1234-1234&quot;, terms as &quot;word1 word2 word3&quot;" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="Then The service returned a list with &quot;3&quot; candidates" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="Scenario: Search works on third after failing on previous search engines over fail safe engine" classname="Scenario: Search works on third after failing on previous search engines over fail safe engine" time="0"/>
  <testcase name="Given A configuration service created from an environment as in file &quot;environment_bypattern_es.json&quot;" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And A mock text content parser" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And A mock text content provider" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And A candidate repository" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And A candidates search service throwing an exception as &quot;NoSearchResultException&quot;" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And A mock candidates search factory for the candidates search service above" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And A fail-safe candidates search factory with &quot;3&quot; instances of first search factory" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="When I create the fail-safe Candidates search service" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="And I ask to find candidates to search service for user with ID as &quot;userid1234-1234-1234&quot;, session ID as &quot;sessionid1234-1234-1234&quot;, search ID as &quot;searchid1234-1234-1234&quot;, terms as &quot;word1 word2 word3&quot;" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="Then Command threw a no results exception" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="Scenario: No candidate on third after failing on all search engines over fail safe engine" classname="Scenario: No candidate on third after failing on all search engines over fail safe engine" time="0"/>
  <testcase name="Given A local web client service with a forced content as in file as &quot;duckduckgo/recetas melones at DuckDuckGo.html&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A random headers provider service for agents file as &quot;useragent.pc.list&quot;, languages file as &quot;languages.list&quot;, referrers file as &quot;referrers.list&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A random duckduckgo locale provider service for available locales file as &quot;duckduckgo.kl.lang.es.list&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A DuckDuckGo page parser service" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A mock text content parser" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A mock text content provider" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And An Alexa output formatter for searching" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A candidate repository" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And A DuckDuckGo candidates search service for url as &quot;http://duck.dot&quot;, iso 4-letters locale as &quot;es-ES&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="When I ask to find candidates to search service for user with ID as &quot;userid1234-1234-1234&quot;, session ID as &quot;sessionid1234-1234-1234&quot;, search ID as &quot;searchid1234-1234-1234&quot;, terms as &quot;word1 word2 word3&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="Then The service returned a list with &quot;29&quot; candidates" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0.001"/>
  <testcase name="And Candidate with position &quot;3&quot; in list has property &quot;title&quot; as &quot;Recetas de Melones - recetasmelones.blogspot.com&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And Candidate with position &quot;17&quot; in list has property &quot;description&quot; as &quot;Para hacer la sopa de melón, lo primero que tienes que hacer es retirar toda la piel de los melones, que en esta variedad es una piel bastante fina. Una vez limpios, el siguiente paso es trocear la pulpa y pasarla por la batidora.&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And Candidate with position &quot;19&quot; in list has property &quot;url&quot; as &quot;https://www.petitchef.es/recetas/recetas-con-melon&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And Candidate with position &quot;23&quot; in list has property &quot;title&quot; as &quot;Cómo distinguir un melón maduro - YouTube&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0"/>
  <testcase name="And Candidate with position &quot;28&quot; in list has property &quot;url&quot; as &quot;https://elcomidista.elpais.com/elcomidista/2013/08/20/receta/1376974800_137697.html&quot;" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0.001"/>
  <testcase name="Scenario: Properly parse all results from a given DuckDuckGo results page" classname="Scenario: Properly parse all results from a given DuckDuckGo results page" time="0.001"/>
  <testcase name="Given A local web client service with a forced content as in file as &quot;duckduckgo/recetas no results at DuckDuckGo.html&quot;" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="And A random headers provider service for agents file as &quot;useragent.pc.list&quot;, languages file as &quot;languages.list&quot;, referrers file as &quot;referrers.list&quot;" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0.001"/>
  <testcase name="And A random duckduckgo locale provider service for available locales file as &quot;duckduckgo.kl.lang.es.list&quot;" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="And A DuckDuckGo page parser service" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0.001"/>
  <testcase name="And A mock text content parser" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="And An Alexa output formatter for searching" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="And A candidate repository" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="And A DuckDuckGo candidates search service for url as &quot;http://duck.dot&quot;, iso 4-letters locale as &quot;es-ES&quot;" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="When I ask to find candidates to search service for user with ID as &quot;userid1234-1234-1234&quot;, session ID as &quot;sessionid1234-1234-1234&quot;, search ID as &quot;searchid1234-1234-1234&quot;, terms as &quot;word1 word2 word3&quot;" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0.001"/>
  <testcase name="Then Command threw a no results exception" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="Scenario: No candidates for a given DuckDuckGo empty results page" classname="Scenario: No candidates for a given DuckDuckGo empty results page" time="0"/>
  <testcase name="Given A mock text content parser" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And An Alexa output formatter for searching" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And A user state repository" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And A user state factory" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And A state with the user as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot; and intent as &quot;SearchCandidates&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0.001"/>
  <testcase name="And A candidate repository" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And A candidates search service with &quot;3&quot; forced results" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And A searching step command" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="When I execute the step command with the terms &quot;mis palabras de búsqueda&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0.001"/>
  <testcase name="Then Searching command returned a text with points &quot;1&quot; to &quot;3&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0.001"/>
  <testcase name="And The current intent in state repository is &quot;SearchCandidates&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="And Candidate repository contains exactly &quot;3&quot; candidates" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with some items" time="0"/>
  <testcase name="Given A mock text content parser" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And An Alexa output formatter for searching" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And A user state repository" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And A user state factory" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And A state with the user as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot; and intent as &quot;SearchCandidates&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And A candidate repository" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And A candidates search service with &quot;1&quot; forced results" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And A searching step command" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="When I execute the step command with the terms &quot;mis palabras de búsqueda&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="Then Searching command returned a text with points &quot;1&quot; to &quot;1&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And The current intent in state repository is &quot;SearchCandidates&quot;" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="And Candidate repository contains exactly &quot;1&quot; candidates" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" classname="Scenario: Search engine is invoked with some terms and returns a candidates collection with only one item" time="0"/>
  <testcase name="Given A mock text content parser" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And An address document getter" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And An Alexa output formatter for searching" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And A user state repository" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And A user state factory" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And A state with the user as &quot;ab551872-0a24-4ea6-bfca-347ca76ee8ce&quot;, session as &quot;12345678-1234-4ea6-bfca-347ca7612345&quot; and intent as &quot;SearchCandidates&quot;" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And A candidate repository" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And A candidate factory" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And A candidates search service with &quot;0&quot; forced results" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And A searching step command" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="When I execute the step command with the terms &quot;mis palabras de búsqueda&quot;" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="Then Command threw a no results exception" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0"/>
  <testcase name="And The current intent in state repository is &quot;SearchCandidates&quot;" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0.003"/>
  <testcase name="Scenario: Search engine is invoked with some terms and returns nothing" classname="Scenario: Search engine is invoked with some terms and returns nothing" time="0.003"/>
  <testcase name="Given An environment configuration service" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="And A parser type configuration value as &quot;WebNarrative&quot;" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="And An empty mock content getter" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="And A mock web search parser as default" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="And A default address modifier" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="And A content getter factory" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="And A mock text content providers factory by configuration with the test only method to get the parser" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="When I create the text content provider" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="Then The providers factory parser class name is as &quot;com.westial.alexa.jumpandread.infrastructure.service.content.RemoteTextContentProvider&quot;" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="Scenario: Create provider with fixed parser type according to configuration" classname="Scenario: Create provider with fixed parser type according to configuration" time="0"/>
  <testcase name="Given An environment configuration service" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="And A parser type configuration value as &quot;WebSearch&quot;" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="And An empty mock content getter" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="And A mock web search parser as default" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="And A default address modifier" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="And A content getter factory" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="And A mock text content providers factory by configuration with the test only method to get the parser" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="When I create the text content provider" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="Then The factory threw an exception with name as &quot;com.westial.alexa.jumpandread.infrastructure.exception.InitializationError&quot;" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="Scenario: Throw exception when both parsing configuration parameters are configured" classname="Scenario: Throw exception when both parsing configuration parameters are configured" time="0"/>
  <testcase name="Given An environment configuration service" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="And A parsers by pattern configuration as in file &quot;parsers_by_pattern_sample.json&quot;" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="And An empty mock content getter" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="And A mock web search parser as default" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="And A default address modifier" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="And A content getter factory" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="And A parser factory with empty value for medium prefix filter regex" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="And A mock text content providers factory by configuration with the test only method to get the parser" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="When I create the text content provider" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="Then The providers factory parser class name is as &quot;com.westial.alexa.jumpandread.infrastructure.service.content.ParserByPatternTextContentProvider&quot;" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="Scenario: Create provider with pattern parser type according to configuration" classname="Scenario: Create provider with pattern parser type according to configuration" time="0"/>
  <testcase name="Given A large html narrative content file &quot;long_narrative_sample.html&quot;" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="And A local content getter" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="And A web narrative parser service implemented from TextContentParser" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="When I parse the narrative file content" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="Then The list of results length is as &quot;4589&quot;" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="And The item indexed as &quot;0&quot; has content as &quot;Fifty Bab Ballads, by William S. Gilbert&quot;, has label as &quot;a&quot;" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="And The item indexed as &quot;4&quot; has content as &quot; PREFACE.&quot;, has label as &quot;p&quot;" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="And The item indexed as &quot;198&quot; has content as &quot; And HOOPER holds his ground,&quot;, has label as &quot;p&quot;" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="And The item indexed as &quot;4587&quot; has content as &quot;{15}&quot;, has label as &quot;a&quot;" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="Scenario: Separate an html content with long parts with no html paragraph tag" classname="Scenario: Separate an html content with long parts with no html paragraph tag" time="0"/>
  <testcase name="Given A large html narrative content file &quot;sample_9_paragraphs_web_narrative.html&quot;" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="And A local content getter" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="And A web narrative parser service implemented from TextContentParser" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="When I parse the narrative file content" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="Then The list of results length is as &quot;9&quot;" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="And The item indexed as &quot;0&quot; has content as &quot;Whats up bro!&quot;, has label as &quot;h2&quot;" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="And The item indexed as &quot;4&quot; has content as &quot;Hey how are you?&quot;, has label as &quot;h2&quot;" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="And The item indexed as &quot;7&quot; has content as &quot;jaume&quot;, has label as &quot;span&quot;" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="And The item indexed as &quot;8&quot; has content as &quot;Lo 2 rewfksdfj dkgkdjnjfgk jhdfkjghfk. djghkfjhgjh jhgjhgjhg jdjhgk djfhgk.&quot;, has label as &quot;p&quot;" classname="Scenario: Separate a usual html content not specially long" time="0"/>
  <testcase name="Scenario: Separate a usual html content not specially long" classname="Scenario: Separate a usual html content not specially long" time="0"/>
</testsuite>